package kz.roman.enttgbot.util;

import jakarta.annotation.PostConstruct;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Logger;

@Component
public class VaultFileCleaner {

    private static final Logger logger = Logger.getLogger(VaultFileCleaner.class.getName());
    private static final String DEFAULT_VAULT_PATH = "vault-setup";

    @PostConstruct
    public void clearVaultFiles() {
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            String vaultPath = System.getenv().getOrDefault("VAULT_FILES_PATH", DEFAULT_VAULT_PATH);
            Path roleIdPath = Paths.get(vaultPath, "role_id");
            Path secretIdPath = Paths.get(vaultPath, "secret_id");

            // –£–¥–∞–ª—è–µ–º role_id
            if (Files.exists(roleIdPath) && Files.size(roleIdPath) > 0) {
                Files.delete(roleIdPath);
                logger.info("üßπ –û—á–∏—â–µ–Ω —Ñ–∞–π–ª role_id");
            } else if (Files.exists(roleIdPath) && Files.size(roleIdPath) == 0) {
                logger.warning("‚ö†Ô∏è –§–∞–π–ª role_id –ø—É—Å—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");
            }

            // –£–¥–∞–ª—è–µ–º secret_id
            if (Files.exists(secretIdPath) && Files.size(secretIdPath) > 0) {
                Files.delete(secretIdPath);
                logger.info("üßπ –û—á–∏—â–µ–Ω —Ñ–∞–π–ª secret_id");
            } else if (Files.exists(secretIdPath) && Files.size(secretIdPath) == 0) {
                logger.warning("‚ö†Ô∏è –§–∞–π–ª secret_id –ø—É—Å—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");
            }

        } catch (IOException e) {
            logger.severe("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ñ–∞–π–ª–æ–≤ Vault: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
